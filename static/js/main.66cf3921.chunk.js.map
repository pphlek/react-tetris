{"version":3,"sources":["gameHelpers.js","components/styles/StyledTetris.js","tetrominos.js","hooks/useStage.js","components/styles/StyledStage.js","components/styles/StyledCell.js","components/Cell.js","components/Stage.js","components/styles/StyledDisplay.js","components/Display.js","components/styles/StyledStartButton.js","components/StartButton.js","components/Tetris.js","hooks/usePiece.js","hooks/useGameStatus.js","hooks/useInterval.js","App.js","serviceWorker.js","index.js","img/bg.png"],"names":["createStage","Array","from","fill","isCollided","player","stage","moveX","x","moveY","y","tetromino","length","yPos","pos","xPos","isMoveInsideGameHeight","isMoveInsideGameWidth","isNewCellClear","StyledTetrisWrapper","styled","div","bgImage","StyledTetris","TETROMINOS","0","shape","color","I","J","L","O","S","T","Z","randomTetromino","prevTetromino","randNum","Math","floor","random","useStage","piece","resetPiece","useState","setStage","linesCleared","setLinesCleared","useEffect","updateStage","prevStage","newStage","map","row","cell","forEach","value","collided","reduce","accumulator","findIndex","prev","unshift","push","sweepRows","StyledStage","props","height","width","StyledCell","type","React","memo","Stage","key","StyledDisplay","gameOver","Display","text","StyledStartButton","button","StartButton","onClick","Tetris","dropTime","setDropTime","setGameOver","setPiece","rotate","dir","rotatedTetro","_","index","col","reverse","useCallback","STAGE_WIDTH","clonedPiece","JSON","parse","stringify","offset","usePiece","updatePiecePos","rotatePiece","score","setScore","line","setLine","lvl","setLvl","linePoints","calcScore","useGameStatus","movePieceLaterally","drop","move","keyCode","callback","delay","savedCallback","useRef","current","id","setInterval","clearInterval","useInterval","role","tabIndex","onKeyDown","e","onKeyUp","App","className","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","module","exports"],"mappings":"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","file":"static/js/main.66cf3921.chunk.js","sourcesContent":["export const STAGE_WIDTH = 10;\nexport const STAGE_HEIGHT = 20;\n\nexport const LEFT_ARROW = 37;\nexport const UP_ARROW = 38;\nexport const RIGHT_ARROW = 39;\nexport const DOWN_ARROW = 40;\n\nexport const EMPTY_CELL = 0;\n\nexport const createStage = () => (\n    Array.from(Array(STAGE_HEIGHT), () => \n        new Array(STAGE_WIDTH).fill([0, 'clear'])\n    )\n)\n\nexport const isCollided = (player, stage, { x: moveX, y: moveY }) => {\n    for (let y = 0; y < player.tetromino.length; y++) {\n        for (let x = 0; x < player.tetromino[y].length; x++) {\n            if (player.tetromino[y][x] !== EMPTY_CELL) {\n                const yPos = y + player.pos.y + moveY;\n                const xPos = x + player.pos.x + moveX\n\n                if (!isMoveInsideGameHeight(stage, yPos) || \n                    !isMoveInsideGameWidth(stage, yPos, xPos) || \n                    !isNewCellClear(stage, yPos, xPos))\n                    return true;\n            }\n        }\n    }\n}\n\nconst isMoveInsideGameHeight = (stage, yPos) => stage[yPos];\nconst isMoveInsideGameWidth = (stage, yPos, xPos) => stage[yPos][xPos];\nconst isNewCellClear = (stage, yPos, xPos) => stage[yPos][xPos][1] === 'clear';\n\n","import styled from 'styled-components';\n\nimport bgImage from '../../img/bg.png';\n\nexport const StyledTetrisWrapper = styled.div`\n    width: 100vw;\n    height: 100vh;\n    background: url(${bgImage}) #000;\n    background-size: cover;\n    overflow: hidden;\n`\nexport const StyledTetris = styled.div`\n    display: flex;\n    align-items: flex-start;\n    padding: 40px;\n    margin: 0 auto;\n    max-width: 900px;\n\n    aside {\n        width: 100%;\n        max-width: 200px;\n        display: block;\n        padding: 0 20px;\n    }\n`","export const TETROMINOS = {\n    0: { \n        shape: [[0]], \n        color: '0, 0, 0' \n    },\n    I: { \n        shape: [\n            [0, 'I', 0, 0],\n            [0, 'I', 0, 0],\n            [0, 'I', 0, 0],\n            [0, 'I', 0, 0]\n        ],\n        color: '80, 227, 230' \n    },\n    J: { \n        shape: [\n            [0, 'J', 0],\n            [0, 'J', 0],\n            ['J', 'J', 0]\n        ],\n        color: '36, 95, 223' \n    },\n    L: { \n        shape: [\n            [0, 'J', 0],\n            [0, 'J', 0],\n            [0, 'J', 'J']\n        ],\n        color: '223, 173, 36' \n    },\n    O: { \n        shape: [\n            ['O', 'O'],\n            ['O', 'O'],\n        ],\n        color: '223, 217, 36' \n    },\n    S: { \n        shape: [\n            [0, 'S', 'S'],\n            ['S', 'S', 0],\n            [0, 0, 0]\n        ],\n        color: '48, 211, 56' \n    },\n    T: {\n        shape: [\n            [0, 0, 0],\n            ['T', 'T', 'T'],\n            [0, 'T', 0]\n        ],\n        color: '132, 61, 198'  \n    },\n    Z: {\n        shape: [\n            ['Z', 'Z', 0],\n            [0, 'Z', 'Z'],\n            [0, 0, 0]\n        ],\n        color: '227, 78, 78' \n    }\n}\n\nexport const randomTetromino = (prevTetromino) => {\n    const tetrominos = 'IJLOSTZ';\n    const REROLL = 7;\n    let randNum = Math.floor(Math.random() * (tetrominos.length + 1));\n\n    if (randNum === REROLL)\n        randNum = Math.floor(Math.random() * tetrominos.length);\n\n    const randTetromino = tetrominos[randNum];\n\n    return TETROMINOS[randTetromino];\n}\n","import { useState, useEffect } from 'react';\nimport { EMPTY_CELL, createStage } from '../gameHelpers';\n\nexport const useStage = (piece, resetPiece) => {\n    const [stage, setStage] = useState(createStage());\n    const [linesCleared, setLinesCleared] = useState(0);\n\n    useEffect(() => {\n        setLinesCleared(0);\n\n        const sweepRows = newStage => newStage.reduce((accumulator, row) => {\n            if (row.findIndex(cell => cell[0] === 0) === -1) {\n                setLinesCleared(prev => prev + 1);\n                accumulator.unshift(new Array(newStage[0].length).fill([0, 'clear']))\n                return accumulator;\n            }\n            accumulator.push(row);\n            return accumulator;\n        }, []);\n\n        const updateStage = prevStage => {\n            const newStage = prevStage.map(row => \n                row.map(cell => (cell[1] === 'clear' ? [EMPTY_CELL, 'clear'] : cell))\n            );\n\n            piece.tetromino.forEach((row, y) => {\n                row.forEach((value, x) => {\n                    if (value !== EMPTY_CELL) {\n                        newStage[y + piece.pos.y][x + piece.pos.x] = [\n                            value,\n                            `${piece.collided ? 'merged' : 'clear'}`\n                        ];\n                    }\n                });\n            });\n\n            if (piece.collided) {\n                resetPiece();\n                return sweepRows(newStage);\n            }\n\n            return newStage;\n        }\n\n        setStage(prev => updateStage(prev));\n    }, [piece, resetPiece]);\n\n    return [stage, setStage, linesCleared];\n}\n","import styled from 'styled-components';\n\nexport const StyledStage = styled.div`\n    display: grid;\n    grid-template-rows: repeat(\n        ${props => props.height},\n        calc(25vw / ${props => props.width})\n    );\n    grid-template-columns: repeat(${props => props.width}, 1fr);\n    grid-gap: 1px;\n    border: 2px solid #74c4bb;\n    width: 100%;\n    max-width: 25vw;\n    background: #111;\n`\n","import styled from 'styled-components';\n\nexport const StyledCell = styled.div`\n    width: auto;\n    background: rgba(${props => props.color}, 0.8);\n    border: ${props => (props.type === 0 ? '0px solid' : '4px solid')};\n    border-bottom-color: rgba(${props => props.color}, 0.1);\n    border-right-color: rgba(${props => props.color}, 1);\n    border-top-color: rgba(${props => props.color}, 1);\n    border-left-color: rgba(${props => props.color}, 0.3);\n`\n","import React from 'react';\nimport { StyledCell } from './styles/StyledCell';\nimport { TETROMINOS } from '../tetrominos';\n\nconst Cell = ({ type }) => (\n    <StyledCell \n        type={type} \n        color={TETROMINOS[type].color}\n    />\n)\n\nexport default React.memo(Cell);\n","import React from 'react';\nimport { StyledStage } from './styles/StyledStage'; \n\nimport Cell from './Cell';\n\nconst Stage = ({ stage }) => (\n    <StyledStage width={stage[0].length} height={stage.length}>\n        {stage.map(row => row.map((cell, x) => <Cell key={x} type={cell[0]} />))}\n    </StyledStage>\n)\nexport default Stage;\n","import styled from 'styled-components';\n\nexport const StyledDisplay = styled.div`\n    box-sizing: border-box;\n    display: flex;\n    align-items: center;\n    margin: 0 0 20px 0;\n    padding: 20px;\n    border: 4px solid #74c4bb;\n    min-height: 30px;\n    width: 100%;\n    border-radius: 20px;\n    color: ${props => (props.gameOver ? 'red' : 'white')};\n    background: #000;\n    font-family: Pixel, Arial, Helvetica, sans-serif;\n    font-size: 0.8rem;\n`","import React from 'react';\nimport { StyledDisplay } from './styles/StyledDisplay';\n\nconst Display = ({ gameOver, text }) => (\n    <StyledDisplay gameOver={gameOver}>{text}</StyledDisplay>\n)\n\nexport default Display;\n","import styled from 'styled-components';\n\nexport const StyledStartButton = styled.button`\n    box-sizing: border-box;\n    margin: 0 0 100px 0;\n    padding: 23px 0 20px 0;\n    min-height: 30px;\n    width: 100%;\n    border-radius: 20px;\n    border: 2px solid #74c4bb;\n    color: white;\n    background: #666;\n    font-family: Pixel, Arial, Helvetica, sans-serif;\n    font-size: 1rem;\n    outline: none;\n    cursor: pointer;\n`\n","import React from 'react';\nimport { StyledStartButton } from './styles/StyledStartButton';\n\nconst StartButton = ({ onClick }) => (\n    <StyledStartButton onClick={onClick}>Start Game</StyledStartButton>\n)\n\nexport default StartButton;\n","import React, { useState } from 'react';\n\nimport { LEFT_ARROW, UP_ARROW, RIGHT_ARROW, DOWN_ARROW, createStage, isCollided } from '../gameHelpers';\n\n// Styled Components\nimport { StyledTetrisWrapper, StyledTetris } from './styles/StyledTetris';\n\n// Custom Hooks\nimport { useInterval } from '../hooks/useInterval';\nimport { usePiece } from '../hooks/usePiece';\nimport { useStage } from '../hooks/useStage';\nimport { useGameStatus } from '../hooks/useGameStatus';\n\n// Components\nimport Stage from './Stage';\nimport Display from './Display';\nimport StartButton from './StartButton';\n\nconst Tetris = () => {\n    const [dropTime, setDropTime] = useState(null);\n    const [gameOver, setGameOver] = useState(false);\n\n    const [piece, updatePiecePos, resetPiece, rotatePiece] = usePiece();\n    const [stage, setStage, linesCleared] = useStage(piece, resetPiece);\n    const [score, setScore, line, setLine, lvl, setLvl] = useGameStatus(linesCleared);\n\n    const movePieceLaterally = dir => {\n        if (!isCollided(piece, stage, { x: dir, y: 0}))\n            updatePiecePos({ x: dir, y: 0 });\n    }\n\n    const startGame = () => {\n        setStage(createStage());\n        setDropTime(500);\n        resetPiece();\n        setGameOver(false);\n        setScore(0);\n        setLine(0);\n        setLvl(10);\n    }\n\n    const drop = () => {\n        if (line > (lvl + 1) * 10) {\n            setLvl(prev => prev + 1);\n            setDropTime(1000 / (lvl + 1));\n        }\n\n        if (!isCollided(piece, stage, { x: 0, y: 1})) {\n            updatePiecePos({ x: 0, y: 1, collided: false });\n        } else {\n            if (piece.pos.y < 1) {\n                setGameOver(true);\n                setDropTime(null);\n            }\n            updatePiecePos({ x: 0, y: 0, collided: true });\n        }\n    }\n\n    const keyUp = ({ keyCode }) => {\n        if (!gameOver)\n            if (keyCode === DOWN_ARROW)\n                setDropTime(1000 / (lvl + 1));\n    }\n\n    const dropPiece = () => {\n        setDropTime(null);\n        drop();\n    }\n\n    const move = ({ keyCode }) => {\n        if (!gameOver) {\n            if (keyCode === LEFT_ARROW)\n                movePieceLaterally(-1);\n            else if (keyCode === RIGHT_ARROW)\n                movePieceLaterally(1);\n            else if (keyCode === DOWN_ARROW)\n                dropPiece();\n            else if (keyCode === UP_ARROW)\n                rotatePiece(stage, 1);\n        }\n    }\n\n    useInterval(() => {\n        drop();\n    }, dropTime);\n\n    return (\n        <StyledTetrisWrapper role='button' tabIndex='0' onKeyDown={e => move(e)} onKeyUp={keyUp}>\n            <StyledTetris>\n                <Stage stage={stage} />\n                <aside>\n                    {gameOver ? (\n                        <Display gameOver={gameOver} text='Game Over' />\n                    ) : (\n                        <div>\n                            <Display text={`Score: ${score}`} />\n                            <Display text={`Line: ${line}`} />\n                            <Display text={`Lvl: ${lvl}`} />\n                        </div>\n                    )}\n                    <StartButton onClick={startGame} />\n                </aside>\n            </StyledTetris>\n        </StyledTetrisWrapper>\n    );\n}\n\nexport default Tetris;\n","import { useState, useCallback } from 'react';\n\nimport { TETROMINOS, randomTetromino } from '../tetrominos';\n\nimport { STAGE_WIDTH, isCollided } from '../gameHelpers';\n\nexport const usePiece = () => {\n    const [piece, setPiece] = useState({\n        pos: { x: 0, y: 0 },\n        tetromino: TETROMINOS[0].shape,\n        collided: false\n    });\n\n    const rotate = (tetromino, dir) => {\n        // make rows become cols (transpose)\n        const rotatedTetro = tetromino.map((_, index) => tetromino.map(col => col[index]));\n        \n        // reverse each row to get rotated tetromino\n        if (dir > 0 ) \n            return rotatedTetro.map(row => row.reverse());\n\n        return rotatedTetro.reverse();\n    }\n\n    const rotatePiece = (stage, dir) => {\n        const clonedPiece = JSON.parse(JSON.stringify(piece));\n        clonedPiece.tetromino = rotate(clonedPiece.tetromino, dir);\n\n        const xPos = clonedPiece.pos.x;\n        let offset = 1;\n        while (isCollided(clonedPiece, stage, { x: 0, y: 0 })) {\n            clonedPiece.pos.x += offset;\n            offset = -(offset + (offset > 0 ? 1 : -1));\n            if (offset > clonedPiece.tetromino[0].length) {\n                rotate(clonedPiece.tetromino, -dir);\n                clonedPiece.pos.x = xPos;\n                return;\n            }\n        }\n\n        setPiece(clonedPiece);\n    }\n\n    const updatePiecePos = ({ x, y, collided }) => {\n        setPiece(prev => ({\n            ...prev,\n            pos: { x: (prev.pos.x + x), y: (prev.pos.y + y)},\n            collided\n        }));\n    }\n\n    const resetPiece = useCallback(() => {\n        setPiece({\n            pos: { x: STAGE_WIDTH / 2 - 2, y: 0 },\n            tetromino: randomTetromino().shape,\n            collided: false\n        })\n    }, [])\n\n    return [piece, updatePiecePos, resetPiece, rotatePiece];\n}\n","import { useState, useEffect, useCallback } from 'react';\n\nexport const useGameStatus = (linesCleared) => {\n    const [score, setScore] = useState(0);\n    const [line, setLine] = useState(0);\n    const [lvl, setLvl] = useState(0);\n\n    const linePoints = [40, 100, 300, 1200];\n\n    const calcScore = useCallback(() => {\n        if (linesCleared > 0) {\n            setScore(prev => prev + linePoints[linesCleared - 1] * (lvl + 1));\n            setLine(prev => prev + linesCleared)\n        }\n    }, [lvl, linePoints, linesCleared]);\n\n    useEffect(() => {\n        calcScore();\n    }, [calcScore, linesCleared, score]);\n\n    return [score, setScore, line, setLine, lvl, setLvl];\n}\n","import { useEffect, useRef } from 'react';\n\nexport function useInterval(callback, delay) {\n    const savedCallback = useRef();\n    // Remember the latest callback.\n    useEffect(() => {\n        savedCallback.current = callback;\n    }, [callback]);\n\n    // Set up the interval.\n    useEffect(() => {\n        function tick() {\n            savedCallback.current();\n        }\n        if (delay !== null) {\n            const id = setInterval(tick, delay);\n            return () => {\n                clearInterval(id);\n            };\n        }\n    }, [delay]);\n}\n","import React from 'react';\nimport Tetris from './components/Tetris';\n\nconst App = () => (\n    <div className='App'>\n        <Tetris />\n    </div>\n)\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/bg.2810fe6b.png\";"],"sourceRoot":""}